// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}
model collaborationOpportunity {
  id              Int      @id @default(autoincrement())
  Fullname        String
  email           String
  Phonenumber     String
  type            String
  category        String
  description     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Subscriber {
  id    Int    @id @default(autoincrement())
  email String @unique
}

model event {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  targetDate  DateTime
  category    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model contestParticipant {
  id                Int      @id @default(autoincrement())
  teamLeaderName    String
  email             String   @unique
  phoneNumber       String
  teamName          String   @unique
  numberOfMembers   Int
  teamMembers       String   
  projectTitle      String   @unique
  projectDescription String
  techStack         String?  
  projectUrl        String?  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model expoParticipant {
  id                      Int      @id @default(autoincrement())
  fullName                String
  email                   String
  phoneNumber             String
  companyName             String?
  jobTitle                String?
  participantType         String
  setupRequirements       String?
  presentationTitle       String?
  presentationAbstract    String?
  productName             String?
  productDescription      String?
  websiteUrl              String?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
}
